#!/bin/sh
cd "$(dirname "$0")"

CONST_ALREADY=10

PASS=0
FAIL=0
ALREADY=0
TESTS_AMOUNT=0

general_test () {
local PROVIDE="$1"
local IF_OK="$2"
printf "test $PROVIDE ... "
local RESULT="$($PROVIDE 2>/dev/null | tail -n1)"
TESTS_AMOUNT=$((TESTS_AMOUNT + 1))

if test "ALREADY." = "$RESULT";then
ALREADY=$(($ALREADY + 1))
printf "PASS(ALREADY)";echo;return $CONST_ALREADY;
fi

if test "OK." = "$RESULT";then
    PASS=$(($PASS + 1))
    printf "PASS";echo;

    if test "$IF_OK" != "";then 
	general_test "$IF_OK";
    fi 	

return 0;
fi

FAIL=$(($FAIL + 1))
echo FAIL
return 1
}

test_provide_lisp () {
general_test "./provide-lisp"
}

test_provide_emacs () {
general_test "./provide-emacs"
}

# Test running lisp-system:
test_run_lisp () {
printf "test ./run-lisp <some_parameters> ... "
local RESULT="$(./run-lisp --eval "(progn (format t \"~%Test running lisp-system~%Printed symbol SOME:~%\") (princ 'SYMBOL) (terpri))" \
 --eval "(quit)" | tail -n1)"
TESTS_AMOUNT=$((TESTS_AMOUNT + 1))

if test "$RESULT" = "SYMBOL"
then
    PASS=$((PASS + 1))
    printf PASS
else 
    FAIL=$((FAIL + 1))
    echo FAIL
    return 1
fi
echo
}

general_test "./sh/provide-tool.sh wget" "./sh/remove-tool wget"
PROVIDE_LISP_RES=$(general_test ./provide-lisp)

test_run_lisp
if test "$PROVIDE_LISP_RES" != "$CONST_ALREADY"
then general_test ./remove-lisp
fi

general_test ./provide-emacs ./remove-emacs	
general_test ./sh/provide-quicklisp.sh ./remove-quicklisp.sh
general_test ./provide-slime ./remove-slime

echo "
tests amount = $TESTS_AMOUNT
tests passed = $PASS
tests already = $ALREADY
tests failed = $FAIL"

if test "$(($PASS + $ALREADY))" = "$TESTS_AMOUNT"
then echo "All tests passed.

OK."
else echo "Not all tests passed.

FAILED."
fi
