Инструменты для Лисп-разработки (lisp-dev-tools).

    Линукс шелл-скрипты для автоматизации загрузки, компиляции и конфигурирования инструментов 
для разработки на языке программирования Common Lisp (Emacs, Slime, SBCL и других лисп-систем).

Возможности:
  - Быстрое и удобное обновление версий Лисп-систем.
  - Полная автоматизация загрузки, конфигурирования и постройки лисп-систем.
  - Общий интерфейс для использования множества лисп-систем с открытми исходниками.
  - Автоматизация конфигурирования и инсталляции (внутрь lisp-dev-tools) Quicklisp и Slime.
  - Переносимость: для использования на другом хосте, с такой же 
    ОС и архитектурой - достаточно только скопировать директорию!

Сейчас поддерживаются: Linux Ubuntu 11.04/x86-64.

Для постройки лисп-системы CMUCL: требуется пакет libc6-dev-i386.

Обеспечивается 10(!) Лисп-систем с открытыми исходниками:

SBCL - Steel Bank Common Lisp	(http://www.sbcl.org/)
CMUCL(x86 only)-CMU Common Lisp (http://www.cons.org/cmucl/)
XCL 	    	   		(http://armedbear.org/)
ECL - Embedded Common Lisp 	(http://ecls.sourceforge.net/)
CLISP        	      		(http://www.clisp.org/)
MKCL - ManKai Common Lisp 	(http://common-lisp.net/project/mkcl/)
ABCL - Armed Bear Common Lisp 	(http://common-lisp.net/project/armedbear/)
WCL    	     	  	 	(http://pgc.com/commonlisp/)
GCL(CLTL1 only)-GNU Common Lisp (http://www.gnu.org/s/gcl/)
CCL - Clozure Common Lisp	(http://ccl.clozure.com/)

---------------------------------------------
Примечания:
	1) CMUCL строится только для архитектуры x86, а значит требуется её
поддержка на системах с архитектурой x86-64 - для успешной постройки в 
Ubuntu 11.04 необходимо инсталлировать пакет libc6-dev-i386 (следовательно
этот пакет также требуется при использовании команды ./provide-all-lisps).
Для инсталляции выполните команду:

$ sudo apt-get -y install libc6-dev-i386

       ... вместо "apt-get" предпочтительней использовать "aptitude".

        2) GCL строится только в режиме соответствия стандарту CLTL1 (не строится с опцией (для configure) --enable-ansi - это баг в GCL).

	3) SBCL по умолчанию не строится - так как обеспечивается предварительно построенными бинарниками. Для постройки из исходников выполните:

$ ./rebuild-lisp

---------------------------------------------
Использование (простые примеры):
	1) Перейдите в директорию:

$ cd <путь_ко_проекту>/lisp-dev-tools

	2) Приготовление для использования Emacs/Slime, SBCL (по умолчанию, предварительно построенных бинарников) и Quicklisp (если Emacs не найден в /usr/bin/emacs, тогда автоматически загружаются его свежие исходники, конфигурируются, строятся и инсталлируются (внутрь lisp-dev-tools):

$ ./provide-slime

	3) Запуск Slime (соответственно выполняются: SBCL (по-умолчанию), Emacs и загружается Qucklisp):

$ ./run-slime

------------------------------------------
Использование (усовершенствованные примеры):

	1) Загрузка (по-умолчанию: предварительно построенных бинарников SBCL), конфигурирование, постройка и инсталляция внутрь lisp-dev-tools (для переносимости).

$ ./provide-lisp

	2) Запуск лисп-системы (по умолчанию бинарников SBCL):

$ ./run-lisp 

  	3) Обеспечение и запуск других Лисп-систем (например CCL):

$ LISP=ccl ./provide-lisp && LISP=ccl ./run-lisp

  	4) Получение имени текущей Лисп-системы:

$ ./get-lisp
sbcl

	5) Изменение текущей Лисп-системы:

$ ./change-lisp ccl
Current lisp: ccl

	6) Получение версии текущей Лисп-системы:

$ ./get-version
1.0.53

	7) Изменение текущей версии Лисп-системы (внимание: url, включающий новую версию должен быть правильным):

$ ./change-version 1.0.52
Current lisp version: 1.0.52
 
	8) Обеспечение и выполнение Лисп-системы другой версии:

$ VERSION=1.0.51 ./provide-lisp
$ VERSION=1.0.51 ./run-lisp

  	9) Для перестройки текущей Лисп-системы выполните:

$ ./rebuild-lisp

	10) Для обеспечения свежей версии Emacs (если Emacs не найден в /usr/bin/emacs):

./provide-emacs

	11) Для запуска Emacs без Slime (для запуска Slime в запущенном Emacs выполните M-x slime):

$ ./run-emacs	

--------------------------------------------------------------
Ещё примеры:

    1) Получение всех поддерживаемых Лисп-систем:

$ ./get-all-lisps
SBCL
CMUCL
XCL
ECL
CLISP
MKCL
ABCL
WCL
GCL
CCL

    2) Получение команды для постройки или инсталляции или запуска текущий Лисп-системы:

$ ./get-providing-cmd <build | install | run>

    3) Удаление текущей Лисп-системы или Emacs или Slime:

./remove-emacs
./remove-lisp
./remove-slime

    4) Обеспечение всеми поддерживаемыми Лисп-системами:

./provide-all-lisps

--------------------------------------------------------------
Сброс всех изменений:

      1) Удаление всех изменений относящихся к текущей Лисп-системе:

$ ./clean/clean-lisp.sh

      2) Удаление всех изменений (всех архивов, бинарников, исходников и так далее):

$ ./clean/clean-all.sh

--------------------------------------------------------------