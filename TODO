done. 1. Discovery - why downloading EMACS, although it presence true link - utils/emacs -> /usr/bin/emacs.
done. 2. Correct providing WGET and EMACS tool.
3. Finding - why was bad message about bad parameter EXTRA_PARAMS.
4. Make informative message on try run ./rebuild-lisp without before runned ./provide-lisp (or ./provide-slime).
5. Write to README and README_ru about not working ./rebuild-lisp into Gentoo.
6. Write to README and README_ru about gcc required on "ubuntu server x64 10.10"
7. Make checking need programs (example: gcc, g++) before any operations.
8. Added to recomendation - installing wget and emacs (if don't installing this, then lisp-dev-tools
extract its wget archive, building and install it, also downloading emacs, and building and install it).
9. Replace into provide-tool (in core.sh) handling providing special archives for tools: wget and openssl (on case ala switch).
10. On ./clean-all - recovering default symbolic links into utils. Analyzing true way for handling links.
11. Added depends on 'time' for sbcl rebuilding, but not ./provide-lisp (think about to do this with design).     	  	   
12. (Think about)Split functionals: create ./provide-swank command. It will be using by ./provide-slime command. Also added SWANK_PORT variable for ./run-lisp command.tools.conf
13. Add to notes in README: into gentoo LiveDVD12 not compiling elisp sources for Slime if 256 or 512 Mb RAM. But if 768 - all ok.
14. Add to notes in README: for ubuntu-server 10.10 need gcc - (first for openssl: ./provide-lisp -> wget -> openssl)
15. Separating for lisps DEPS_ON_TOOLS for prebuilded and compiled.
16. Add to notes in README: need g++ for ncurses (./provide-emacs -> ncurses).
17. Correct error rebuilding other version lisp, example: VERSION=1.0.54 ./rebuild-lisp

------------- Else tasks --------------
1. Bugfix building ncurses on Debian 6 x86-64 (needed for Emacs building).
2. Providing g++ for XCL building and ncurses building on Debian 6 x86-64.
3. In get-build-install-run-cmds.sh: change of checking on Ubuntu 11.04 - to added checking on x86-64.
4. Make success evaluted code, what like this:

$ sbcl --noinform --dynamic-space-size 8192 --no-sysinit --eval "(let ((a (make-array (* 2 (expt 1024 3)) :initial-element 1 :element-type '(unsigned-byte 8)))) (time (print (sb-posix:fork))) (quit))"

    ... where "sbcl" changed to "run-lisp".

5. Change creating symbolic link (in archives) to wget archive (in sh/) - for portability.
6. Prompt error if ./provide-tool.sh call with empty parameter.
7. If tool already provided - show more informative message (show point target of link).